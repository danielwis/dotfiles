# Windows key as modifier
set $mod Mod4

# --- BASICS --- #
{{ if eq .chezmoi.hostname "desktop" -}}
# Force monitors to be ordered correctly (locking scrambles them otherwise)
output HDMI-A-1 pos 0 0 res 1920x1080
output HDMI-A-2 pos 1920 0 res 1920x1080
{{- else if eq .chezmoi.hostname "thinkpad" -}}
# Fix touchpad
input type:touchpad {
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
    tap_button_map lmr
}
bindgesture swipe:3:left workspace next
bindgesture swipe:3:right workspace prev
{{- end }}

# Sway is in charge of input handling since there's no Xorg
input * {
    xkb_layout "se"
}
# Enable numlock on startup
input type:keyboard xkb_numlock enabled

# --- DECORATIONS & LOOKS --- #

# Borders and gaps
default_border none
gaps inner 10
gaps outer 10

# Window title colours
client.focused "#64885c" "#64885c" "#ffffff"

# Keybinds for "productivity mode" using smaller gaps
bindsym $mod+p gaps inner current set 5; gaps outer current set 5
bindsym $mod+Shift+p gaps inner current set 10; gaps outer current set 10

# Background
output "*" bg ~/.wallpapers/green-road.jpg fill

# swayfx stuff
corner_radius 5
blur on
blur_passes 3
blur_radius 4
shadows on
# shadow_offset 0 0
{{ if eq .chezmoi.hostname "thinkpad" -}}
shadow_blur_radius 20
{{- else if eq .chezmoi.hostname "desktop" -}}
shadow_blur_radius 5
{{- end }}
shadow_color #000000FF
# shadow_inactive_color #000000B0
default_dim_inactive 0.15
# Fix for sway <1.9 (see https://github.com/WillPower3309/swayfx/issues/195)
dim_inactive_colors.unfocused #00000000

layer_effects "notifications" "blur enable; shadows enable"
# setting corner_radius here avoids the rectangular box behind it
# that appears if we only set it in tofi
layer_effects "launcher" "blur enable; shadows enable; corner_radius 5"
# bar
layer_effects "panel" blur enable, corner_radius 5, shadows enable

# Lock screen
bindsym $mod+l exec ~/scripts/lockscreen

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Liga SFMono Nerd Font 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork


# --- KEYBINDS --- #


# Volume
set $refresh_i3blocks pkill -SIGRTMIN+10 i3blocks
bindsym XF86AudioRaiseVolume exec --no-startup-id ~/.config/i3/volume.sh inc && $refresh_i3blocks
bindsym XF86AudioLowerVolume exec --no-startup-id ~/.config/i3/volume.sh dec && $refresh_i3blocks
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3blocks
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3blocks

{{- if eq .chezmoi.hostname "thinkpad" }}
# Use custom script to change brightness
bindsym XF86MonBrightnessDown exec --no-startup-id ~/scripts/brightness_control.sh - && pkill -SIGRTMIN+10 i3blocks && $refresh_i3status
bindsym XF86MonBrightnessUp exec --no-startup-id ~/scripts/brightness_control.sh + && pkill -SIGRTMIN+10 i3blocks && $refresh_i3status
{{- end }}

# Use $mod to drag floating windows
floating_modifier $mod

# Start a terminal
bindsym $mod+Return exec alacritty

# Kill focused window
bindsym $mod+Shift+q kill

# Application launcher
bindsym $mod+d exec --no-startup-id tofi-drun | xargs swaymsg exec --
# PDF opener
#   -r to xargs avoids running zathura if piped output is empty
#   -0 to handle whitespace in filenames
#   remove newlines with `tr` as they screw stuff up for some reason
bindsym $mod+a exec --no-startup-id find ~ -type d -name ".*" -a \! -name "." -prune -o -type f -name "*.pdf" -print | sed 's:/home/daniel:~:' | tofi --width="50%" --prompt-text "Open PDF: " | tr -d '\n' | xargs -r0 zathura &
# Copy path into primary clipboard
bindsym $mod+space exec --no-startup-id \
    find ~ -type d \( \
    \! -name ".config" \
    -a -name ".*" \
    -o -name "*node_modules*" \
    -o -name "google-cloud-sdk" \
    \) -prune \
    -o -type d -print | tofi --prompt-text "Path to copy: " | tr -d '\n' | wl-copy -p

# Screenshot
# TODO: Click screenshot notif should save to location (--action=save or smth?)
bindsym $mod+Shift+s exec ~/scripts/screenshot.sh copy # To clipboard
# TODO: Open menu selector for which region to screenshot
bindsym Print exec ~/scripts/screenshot.sh full # To file

# Screen recording
bindsym $mod+Shift+v exec ~/scripts/screen_recorder.sh

# Emoji picker
bindsym $mod+e exec ~/scripts/emoji-picker.sh

# Change focus
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move windows
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Split in horizontal orientation
bindsym $mod+h split h

# Split in vertical orientation
bindsym $mod+v split v

# Enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# Change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+o layout toggle split

# Toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# Change focus between tiling / floating windows
# bindsym $mod+space focus mode_toggle

# Focus the parent container
# bindsym $mod+a focus parent

# Focus the child container
#bindsym $mod+d focus child


# --- WORKSPACES --- #


# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places. ws3 icon name is "comment[...]" on the nerd fonts' cheet sheet
set $ws1 "1:  "
set $ws2 "2:  "
set $ws3 "3:  "
set $ws4 "4   "
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# Switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# Automatically start applications in their respective workspaces
assign [app_id="firefox"] $ws2
# Requires ozone flags for native wayland
assign [app_id="discord"] $ws3

{{- if eq .chezmoi.hostname "desktop" }}

# Window-specific workspaces
# Run `swaymsg -t get_outputs` for a list of monitors
workspace $ws1 output HDMI-A-1
workspace $ws2 output HDMI-A-1
workspace $ws3 output HDMI-A-2
{{- end }}

# Move workspace to different screen
bindsym $mod+Shift+l move workspace to output right
bindsym $mod+Shift+h move workspace to output left

# Window specific rules
# TODO: Make Wayland-y (app_id)
for_window {
    [class="net-runelite-launcher-Launcher"] floating enable
    [shell="xwayland"] title_format "%title [XWayland]"
    [app_id="Slack"] floating enable
    [app_id="zoom"] floating enable
    [app_id="neomutt"] floating enable
    [app_id="firefox"] inhibit_idle fullscreen
    [title="(?:Open|Save) (?:File|Folder|As)"] floating enable, resize set width 1000 height 700
}

# Reload the configuration file
bindsym $mod+Shift+r reload
# Exit sway (returns to TTY)
bindsym $mod+Shift+e exec "swaynag -t warning -m 'Do you really want to exit sway? This will drop you back into the TTY and close all open windows.' -B 'Yes, exit sway' 'swaymsg exit'"

# Window resizing (you can also use the mouse by $mod+right-click dragging)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Use arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Bar
bar {
        swaybar_command swaybar
        status_command i3blocks

        position top

        separator_symbol '/'
        height 22
        gaps 12 20 0 20
        status_padding 4

        # https://i3wm.org/docs/userguide.html#_colors
        colors {
            background #22222299
            statusline #ffffff
            separator #cccccc

            # Nice green: 315528
            # Syntax: class    border  bg      text
            focused_workspace  #555555 #315528 #ffffff
            active_workspace   #888888 #5f676a #ffffff
            inactive_workspace #333333 #222222 #888888
            urgent_workspace   #2f343a #690a22 #ffffff
        }
}


{{- if eq .chezmoi.hostname "thinkpad" }}

bindswitch --locked --reload lid:on exec systemctl suspend
{{- end }}

# Autostart
exec --no-startup-id alacritty
exec gammastep
exec firefox
exec discord --enable-features=UseOzonePlatform --ozone-platform=wayland
exec dunst
exec swayidle -w \
	timeout 600 'swaymsg "output * power off"' \
	timeout 900 'swaylock -f' \
	resume 'swaymsg "output * power on"' \
    before-sleep 'swaylock -f'

include /etc/sway/config.d/*
